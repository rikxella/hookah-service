// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: search.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BrandTobaccoSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrandPrefix   string                 `protobuf:"bytes,1,opt,name=brand_prefix,json=brandPrefix,proto3" json:"brand_prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrandTobaccoSearch) Reset() {
	*x = BrandTobaccoSearch{}
	mi := &file_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrandTobaccoSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandTobaccoSearch) ProtoMessage() {}

func (x *BrandTobaccoSearch) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandTobaccoSearch.ProtoReflect.Descriptor instead.
func (*BrandTobaccoSearch) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{0}
}

func (x *BrandTobaccoSearch) GetBrandPrefix() string {
	if x != nil {
		return x.BrandPrefix
	}
	return ""
}

type NameTobaccoSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brand         string                 `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	NamePrefix    string                 `protobuf:"bytes,2,opt,name=name_prefix,json=namePrefix,proto3" json:"name_prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameTobaccoSearch) Reset() {
	*x = NameTobaccoSearch{}
	mi := &file_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameTobaccoSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameTobaccoSearch) ProtoMessage() {}

func (x *NameTobaccoSearch) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameTobaccoSearch.ProtoReflect.Descriptor instead.
func (*NameTobaccoSearch) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{1}
}

func (x *NameTobaccoSearch) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *NameTobaccoSearch) GetNamePrefix() string {
	if x != nil {
		return x.NamePrefix
	}
	return ""
}

type TobaccoSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []string               `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TobaccoSearchResponse) Reset() {
	*x = TobaccoSearchResponse{}
	mi := &file_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TobaccoSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TobaccoSearchResponse) ProtoMessage() {}

func (x *TobaccoSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TobaccoSearchResponse.ProtoReflect.Descriptor instead.
func (*TobaccoSearchResponse) Descriptor() ([]byte, []int) {
	return file_search_proto_rawDescGZIP(), []int{2}
}

func (x *TobaccoSearchResponse) GetResults() []string {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_search_proto protoreflect.FileDescriptor

const file_search_proto_rawDesc = "" +
	"\n" +
	"\fsearch.proto\x12\x06search\"7\n" +
	"\x12BrandTobaccoSearch\x12!\n" +
	"\fbrand_prefix\x18\x01 \x01(\tR\vbrandPrefix\"J\n" +
	"\x11NameTobaccoSearch\x12\x14\n" +
	"\x05brand\x18\x01 \x01(\tR\x05brand\x12\x1f\n" +
	"\vname_prefix\x18\x02 \x01(\tR\n" +
	"namePrefix\"1\n" +
	"\x15TobaccoSearchResponse\x12\x18\n" +
	"\aresults\x18\x01 \x03(\tR\aresults2\xae\x01\n" +
	"\x14TobaccoSearchService\x12K\n" +
	"\fBrandTobacco\x12\x1a.search.BrandTobaccoSearch\x1a\x1d.search.TobaccoSearchResponse\"\x00\x12I\n" +
	"\vNameTobacco\x12\x19.search.NameTobaccoSearch\x1a\x1d.search.TobaccoSearchResponse\"\x00B\x03Z\x01.b\x06proto3"

var (
	file_search_proto_rawDescOnce sync.Once
	file_search_proto_rawDescData []byte
)

func file_search_proto_rawDescGZIP() []byte {
	file_search_proto_rawDescOnce.Do(func() {
		file_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_search_proto_rawDesc), len(file_search_proto_rawDesc)))
	})
	return file_search_proto_rawDescData
}

var file_search_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_search_proto_goTypes = []any{
	(*BrandTobaccoSearch)(nil),    // 0: search.BrandTobaccoSearch
	(*NameTobaccoSearch)(nil),     // 1: search.NameTobaccoSearch
	(*TobaccoSearchResponse)(nil), // 2: search.TobaccoSearchResponse
}
var file_search_proto_depIdxs = []int32{
	0, // 0: search.TobaccoSearchService.BrandTobacco:input_type -> search.BrandTobaccoSearch
	1, // 1: search.TobaccoSearchService.NameTobacco:input_type -> search.NameTobaccoSearch
	2, // 2: search.TobaccoSearchService.BrandTobacco:output_type -> search.TobaccoSearchResponse
	2, // 3: search.TobaccoSearchService.NameTobacco:output_type -> search.TobaccoSearchResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_search_proto_init() }
func file_search_proto_init() {
	if File_search_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_proto_rawDesc), len(file_search_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_proto_goTypes,
		DependencyIndexes: file_search_proto_depIdxs,
		MessageInfos:      file_search_proto_msgTypes,
	}.Build()
	File_search_proto = out.File
	file_search_proto_goTypes = nil
	file_search_proto_depIdxs = nil
}
